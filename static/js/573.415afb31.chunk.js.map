{"version":3,"file":"static/js/573.415afb31.chunk.js","mappings":"oOAMMA,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAMC,GAAO,IAAAC,EAAAC,EAAA,OAAAJ,IAAAA,MAAA,SAAAK,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEZC,EAAAA,EAAAA,IAAU,GAADC,OAJpB,8BAI+B,YAAAA,OAAWP,EAAO,YAAY,CACvEQ,OAAQ,CACNC,QARQ,mCASRC,SAAU,WAEX,KAAD,EALY,OAART,EAAQE,EAAAQ,KAAAR,EAAAE,KAAA,EAOKJ,EAASC,KAAK,KAAD,EAAtB,OAAJA,EAAIC,EAAAQ,KAAAR,EAAAS,OAAA,SACHV,GAAI,QAAAC,EAAAC,KAAA,GAAAD,EAAAU,GAAAV,EAAA,SAEXW,QAAQC,MAAKZ,EAAAU,IAAQ,yBAAAV,EAAAa,OAAA,GAAAjB,EAAA,mBAExB,gBAdsBkB,GAAA,OAAArB,EAAAsB,MAAA,KAAAC,UAAA,KAgBvB,I,SCjBaC,EAAW,SAAHxB,GAAA,IAAMyB,EAAWzB,EAAXyB,YAAW,OACpCC,EAAAA,EAAAA,KAAA,MAAAC,SACGF,EAAYG,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OACnDC,EAAAA,EAAAA,MAAA,MAAAP,SAAA,EACED,EAAAA,EAAAA,KAAA,OACES,IACEJ,EAAY,mCAAApB,OAC2BoB,GATjD,8EAYQK,MAAO,IACPC,IAAI,UAENX,EAAAA,EAAAA,KAAA,KAAAC,SAAIK,KACJE,EAAAA,EAAAA,MAAA,KAAAP,SAAA,CAAG,cAAYM,OAXRH,EAYJ,KAEJ,E,kBCSP,EAzBa,WACX,IAAQ1B,GAAYkC,EAAAA,EAAAA,MAAZlC,QAERmC,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAEpBhB,EAAckB,EAAQE,KAiB5B,OAfAC,EAAAA,EAAAA,YAAU,WACH1C,GAELL,EAAkBK,GACf2C,MAAK,SAAA1C,GAEFuC,EADEvC,GAGS,CAAC,EAEhB,IAEC2C,OAAM,SAAAC,GAAG,OAAI/B,QAAQC,MAAM8B,EAAI,GACpC,GAAG,CAAC7C,KAEGsB,EAAAA,EAAAA,KAAA,OAAAC,SAAMF,IAAeC,EAAAA,EAAAA,KAACF,EAAQ,CAACC,YAAaA,KACrD,C","sources":["api/axiosGetMovieCast.js","components/FilmCast/FilmCast.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '5f2a66e63fa9a8139a0b7e8b9aba27ca';\n\nconst baseURL = 'https://api.themoviedb.org/';\n\nconst axiosGetMovieCast = async movieId => {\n  try {\n    const response = await axios.get(`${baseURL}3/movie/${movieId}/credits`, {\n      params: {\n        api_key: API_KEY,\n        language: 'en-US',\n      },\n    });\n\n    const data = await response.data;\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport default axiosGetMovieCast;\n","import PropTypes from 'prop-types';\n\nconst defaultImg =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport const FilmCast = ({ creditsCast }) => (\n  <ul>\n    {creditsCast.map(({ id, profile_path, name, character }) => (\n      <li key={id}>\n        <img\n          src={\n            profile_path\n              ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n              : defaultImg\n          }\n          width={250}\n          alt=\"path\"\n        />\n        <p>{name}</p>\n        <p>Character: {character}</p>\n      </li>\n    ))}\n  </ul>\n);\n\nFilmCast.propTypes = {\n  creditsCast: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\nimport axiosGetMovieCast from 'api/axiosGetMovieCast';\nimport { FilmCast } from 'components/FilmCast/FilmCast';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [credits, setCredits] = useState({});\n\n  const creditsCast = credits.cast;\n\n  useEffect(() => {\n    if (!movieId) return;\n\n    axiosGetMovieCast(movieId)\n      .then(response => {\n        if (response) {\n          setCredits(response);\n        } else {\n          setCredits({});\n        }\n      })\n\n      .catch(err => console.error(err));\n  }, [movieId]);\n\n  return <div>{creditsCast && <FilmCast creditsCast={creditsCast} />}</div>;\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  credits: PropTypes.object,\n};\n"],"names":["axiosGetMovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movieId","response","data","_context","prev","next","axios","concat","params","api_key","language","sent","abrupt","t0","console","error","stop","_x","apply","arguments","FilmCast","creditsCast","_jsx","children","map","_ref2","id","profile_path","name","character","_jsxs","src","width","alt","useParams","_useState","useState","_useState2","_slicedToArray","credits","setCredits","cast","useEffect","then","catch","err"],"sourceRoot":""}